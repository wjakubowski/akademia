#include "expression.h"

//?????????????????????????????????????????
inline double Expression::eval() const{
    return 0;
}
//?????????????????????????????????????????

double Literal::eval() const
{
    return value;
}

string Literal::toString() const
{
    return to_string(value);
}

double Add::eval() const
{
    return left->eval()+right->eval();
}

string Add::toString() const
{
    return "("+left->toString()+"+"+right->toString()+")";
}

double Multiply::eval() const
{
    return left->eval()*right->eval();
}

string Multiply::toString() const
{
    return "("+left->toString()+"*"+right->toString()+")";
}

void Expression::accept(Visitor& v) const
{
    v.visit(*this);
}

